services:
  mongodb:
    image: mongo:8.0-rc
    pull_policy: "always"
    restart: unless-stopped
    ports:
      - "${MONGO_BIND:-127.0.0.1:27017}:27017"
    deploy:
      resources:
        limits:
          memory: ${MONGO_MEMORY:-4G}
    command: --replSet rs0 
    volumes:
      - mongodb:/data/db

  mongodb-setup:
    image: mongo:8.0-rc
    pull_policy: "always"
    restart: "no"
    depends_on:
      - mongodb
    entrypoint:
     - /bin/sh
     - -c
     - |
      set -eux;
      mongosh --host mongodb --eval 'rs.initiate({
        _id: "rs0",
        version: 1,
        members: [
          { _id: 0, host: "mongodb:27017" }
        ]
      })';
      exit 0;

  typesense:
    image: typesense/typesense:27.0
    pull_policy: "always"
    restart: unless-stopped
    ports:
      - "${TYPESENSE_BIND:-127.0.0.1:8108}:8108"
    command: '--data-dir /data --api-key=seventvkey --enable-cors'
    volumes:
      - typesense:/data
    deploy:
      resources:
        limits:
          memory: ${TYPESENSE_MEMORY:-4G}

  nats:
    image: nats:latest
    pull_policy: "always"
    restart: unless-stopped
    ports:
      - "${NATS_BIND:-127.0.0.1:4222}:4222"
    command: -js -sd /data 
    volumes:
      - nats:/data
    deploy:
      resources:
        limits:
          memory: ${NATS_MEMORY:-4G}

  # minio:
  #   image: ghcr.io/scuffletv/ci/minio:latest
  #   pull_policy: "always"
  #   restart: unless-stopped
  #   ports:
  #     - "${MINIO_BIND:-127.0.0.1:9000}:9000"
  #     - "${MINIO_CONSOLE_BIND:-127.0.0.1:9001}:9001"
  #   environment:
  #     - "MINIO_ACCESS_KEY=seventvkey"
  #     - "MINIO_SECRET_KEY=seventvkey" 
  #   volumes:
  #     - minio:/data
  #   command: server /data --console-address ":9001"
  #   deploy:
  #     resources:
  #       limits:
  #         memory: ${MINIO_MEMORY:-4G}

  # minio-setup:
  #   image: minio/mc:latest
  #   pull_policy: "always"
  #   restart: "no"
  #   depends_on:
  #     - minio
  #   entrypoint:
  #     - /bin/sh
  #     - -c
  #     - |
  #       set -eux;
  #       /usr/bin/mc config host add myminio http://minio:9000 seventvkey seventvkey || true; 
  #       /usr/bin/mc mb myminio/seventv-cdn || true;
  #       /usr/bin/mc anonymous set download myminio/seventv-cdn || true;
  #       /usr/bin/mc mb myminio/seventv-cdn-private || true;
  #       exit 0;

  # image-processor:
  #   image: ghcr.io/scuffletv/image-processor:latest
  #   pull_policy: "always"
  #   restart: unless-stopped
  #   ports:
  #     - "${IMAGE_PROCESSOR_BIND:-127.0.0.1:50051}:50051"
  #   command: --config /config/image-processor.toml
  #   volumes:
  #     - ./dev/image-processor.toml:/config/image-processor.toml
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: ${IMAGE_PROCESSOR_CPUS:-1}
  #         memory: ${IMAGE_PROCESSOR_MEMORY:-4G}
  #   depends_on:
  #     - mongodb
  #     - nats
  #     - minio

  # clickhouse:
  #   image: bitnami/clickhouse:latest
  #   pull_policy: "always"
  #   restart: unless-stopped
  #   # user: root
  #   ports:
  #     - "${CLICKHOUSE_BIND:-127.0.0.1:8123}:8123"
  #     - "${CLICKHOUSE_BIND:-127.0.0.1:19000}:9000"
  #   environment:
  #     - CLICKHOUSE_ADMIN_USER=default
  #     - CLICKHOUSE_ADMIN_PASSWORD=default
  #   volumes:
  #     - clickhouse:/bitnami/clickhouse

  redis:
    image: bitnami/redis:latest
    pull_policy: "always"
    restart: unless-stopped
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "${REDIS_BIND:-127.0.0.1:6379}:6379"
    deploy:
      resources:
        limits:
          memory: ${REDIS_MEMORY_LIMIT:-4G}
    volumes:
      - redis:/bitnami/redis/data

volumes:
  mongodb:
  typesense:
  # minio:
  nats:
  clickhouse:
  redis:
